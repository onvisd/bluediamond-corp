@import 'constants/grid';
@import 'constants/color';
@import 'constants/type';

/* Hero Styles */

.container {
    display: flex;
    position: relative;
    height: 80vh;
    background-color: var(--c--gray-dark);
    background-size: cover;
    background-position: center;
    overflow: hidden;

    @media (--mq-s) {
        padding: 2rem;
        max-height: 450px;
    }
}

.background {
    /* react-parallax sets position: relative, which we don't want here */
    position: absolute !important; /* stylelint-disable-line declaration-no-important */
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    overflow: hidden;

    & img {
        width: 100%; /* this will be overridden by react-parallax */
        max-width: none;
    }
}

.alignTop {
    align-items: flex-start;

    & .innerContainer {
        padding-top: 12vh;
        padding-bottom: 12vh;
    }
}

.alignCenter {
    align-items: center;

    & .innerContainer {
        padding-top: 12vh;
        padding-bottom: 12vh;
        text-align: center;
    }
}

.alignBottom {
    align-items: flex-end;

    & .innerContainer {
        padding-bottom: 12vh;
    }
}

.alignTop,
.alignCenter,
.alignBottom {
    & .innerContainer {
        @media (--mq-s) {
            padding: 0;
        }
    }
}

.innerContainer {
    @mixin container;

    z-index: 10;

    & h1,
    & h3,
    & p {
        max-width: 30vw;

        @media (--mq-m) {
            padding: 0 2rem;
            max-width: 50%;
        }

        @media (--mq-s) {
            padding: 0;
            max-width: 75%;
        }
    }

    & h1 {
        @media (--mq-s) {
            font-size: var(--t--size-lm);
        }
    }

    & h3 {
        @media (--mq-s) {
            font-size: var(--t--size-s);
        }
    }
}

.light {
    color: var(--c--white);
}

.dark {
    background-color: var(--c--white);
    color: var(--c--black);
}
