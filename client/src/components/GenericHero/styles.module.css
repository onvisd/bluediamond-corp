@import 'constants/grid';
@import 'constants/color';
@import 'constants/type';

/* Hero Styles */

.container {
    display: flex;
    position: relative;
    background-color: var(--c--gray-dark);
    background-size: cover;
    background-position: center;

    @media (--mq-s) {
        padding: 2rem;
        min-height: 450px;
    }

    @media (--mq-gt-s) {
        height: 80vh;
        overflow: hidden;
    }
}

.background {
    /* react-parallax sets position: relative, which we don't want here */
    position: absolute !important; /* stylelint-disable-line declaration-no-important */
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    overflow: hidden;

    & img {
        width: 100%; /* this will be overridden by react-parallax */
        max-width: none;
    }
}

.vAlignTop {
    align-items: flex-start;

    & .innerContainer {
        padding-top: 12vh;
        padding-bottom: 12vh;
    }
}

.vAlignCenter {
    align-items: center;

    & .innerContainer {
        padding-top: 12vh;
        padding-bottom: 12vh;
    }
}

.vAlignBottom {
    align-items: flex-end;

    & .innerContainer {
        padding-bottom: 12vh;
    }
}

.vAlignTop,
.vAlignCenter,
.vAlignBottom {
    & .innerContainer {
        @media (--mq-s) {
            padding: 0;
        }
    }
}

.hAlignLeft {
    justify-content: flex-start;
}

.hAlignCenter {
    justify-content: center;
    text-align: center;

    & .innerContainer {
        text-align: center;

        & h1,
        & h3 {
            margin: 0 auto;
        }
    }
}

.hAlignRight {
    justify-content: flex-end;
    text-align: right;

    & .innerContainer {
        text-align: right;

        & h1,
        & h3 {
            margin-right: 0;
            margin-left: auto;
        }
    }
}

.mvAlignTop {
    @media (--mq-m) {
        & .innerContainer {
            padding-top: 6vh;
        }
    }

    @media (--mq-s) {
        align-items: flex-start;

        & .innerContainer {
            padding-top: 0;
            padding-bottom: 38vh;
        }
    }
}

.mvAlignCenter {
    @media (--mq-s) {
        align-items: center;
    }
}

.mvAlignBottom {
    @media (--mq-s) {
        align-items: flex-end;
    }
}

.mhAlignLeft {
    @media (--mq-s) {
        justify-content: flex-start;
    }
}

.mhAlignCenter {
    @media (--mq-s) {
        justify-content: center;
        text-align: center;

        & .innerContainer {
            text-align: center;
        }

        & .innerContainer h1,
        & .innerContainer h3 {
            margin-right: auto;
            margin-left: auto;
        }
    }
}

.mhAlignRight {
    @media (--mq-s) {
        justify-content: flex-end;
        text-align: right;

        & .innerContainer {
            text-align: right;
        }

        & .innerContainer h1,
        & .innerContainer h3 {
            margin-right: 0;
            margin-left: auto;
        }
    }
}

.innerContainer {
    @mixin container;

    z-index: 10;

    & h1,
    & h3,
    & p {
        max-width: 30vw;

        @media (--mq-m) {
            max-width: 50%;
        }

        @media (--mq-s) {
            padding: 0;
            max-width: 85%;
        }
    }

    & h1 {
        @media (--mq-s) {
            font-size: var(--t--size-lm);
        }
    }

    & h3 {
        @media (--mq-s) {
            margin-bottom: 1rem;
            font-size: var(--t--size-s);
        }
    }
}

.light {
    color: var(--c--white);
}

.dark {
    background-color: var(--c--white);
    color: var(--c--black);
}
